<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_79) on Sun Jun 12 16:57:11 EDT 2016 -->
<title>MazeController</title>
<meta name="date" content="2016-06-12">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="MazeController";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../falstad/MazeApplication.html" title="class in falstad"><span class="strong">Prev Class</span></a></li>
<li><a href="../falstad/MazeFileReader.html" title="class in falstad"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?falstad/MazeController.html" target="_top">Frames</a></li>
<li><a href="MazeController.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">falstad</div>
<h2 title="Class MazeController" class="title">Class MazeController</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>falstad.MazeController</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../generation/Order.html" title="interface in generation">Order</a></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../falstad/StubOrder.html" title="class in falstad">StubOrder</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">MazeController</span>
extends java.lang.Object
implements <a href="../generation/Order.html" title="interface in generation">Order</a></pre>
<div class="block">Class handles the user interaction. 
 It implements a state-dependent behavior that controls the display and reacts to key board input from a user. 
 At this point user keyboard input is first dealt with a key listener (SimpleKeyListener)
 and then handed over to a MazeController object by way of the keyDown method.

 This code is refactored code from Maze.java by Paul Falstad, www.falstad.com, Copyright (C) 1998, all rights reserved
 Paul Falstad granted permission to modify and use code for teaching purposes.
 Refactored by Peter Kemper</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested_classes_inherited_from_class_generation.Order">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;generation.<a href="../generation/Order.html" title="interface in generation">Order</a></h3>
<code><a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../falstad/MazeController.html#MazeController()">MazeController</a></strong>()</code>
<div class="block">Constructor
 Default setting for maze generating algorithm is DFS.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../falstad/MazeController.html#MazeController(generation.Order.Builder)">MazeController</a></strong>(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</code>
<div class="block">Constructor that also selects a particular generation method</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../falstad/MazeController.html#MazeController(java.lang.String)">MazeController</a></strong>(java.lang.String&nbsp;filename)</code>
<div class="block">Constructor to read maze from file</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#addView(falstad.Viewer)">addView</a></strong>(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</code>
<div class="block">Register a view</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#deliver(generation.MazeConfiguration)">deliver</a></strong>(<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;mazeConfig)</code>
<div class="block">Delivers the produced maze.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a></code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#getBuilder()">getBuilder</a></strong>()</code>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a></code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#getMazeConfiguration()">getMazeConfiguration</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.awt.Panel</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#getPanel()">getPanel</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#getPercentDone()">getPercentDone</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#getSkillLevel()">getSkillLevel</a></strong>()</code>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#init()">init</a></strong>()</code>
<div class="block">Method to initialize internal attributes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#isPerfect()">isPerfect</a></strong>()</code>
<div class="block">Describes if the ordered maze should be perfect, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#keyDown(int)">keyDown</a></strong>(int&nbsp;key)</code>
<div class="block">Method incorporates all reactions to keyboard input in original code, 
 The simple key listener calls this method to communicate input.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#removeView(falstad.Viewer)">removeView</a></strong>(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</code>
<div class="block">Unregister a view</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../falstad/MazeController.html#updateProgress(int)">updateProgress</a></strong>(int&nbsp;percentage)</code>
<div class="block">Allows external increase to percentage in generating mode.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="MazeController()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController()</pre>
<div class="block">Constructor
 Default setting for maze generating algorithm is DFS.</div>
</li>
</ul>
<a name="MazeController(generation.Order.Builder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</pre>
<div class="block">Constructor that also selects a particular generation method</div>
</li>
</ul>
<a name="MazeController(java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController(java.lang.String&nbsp;filename)</pre>
<div class="block">Constructor to read maze from file</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>filename</code> - </dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="init()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>init</h4>
<pre>public&nbsp;void&nbsp;init()</pre>
<div class="block">Method to initialize internal attributes. Called separately from the constructor.</div>
</li>
</ul>
<a name="getMazeConfiguration()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMazeConfiguration</h4>
<pre>public&nbsp;<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;getMazeConfiguration()</pre>
</li>
</ul>
<a name="addView(falstad.Viewer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addView</h4>
<pre>public&nbsp;void&nbsp;addView(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</pre>
<div class="block">Register a view</div>
</li>
</ul>
<a name="removeView(falstad.Viewer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeView</h4>
<pre>public&nbsp;void&nbsp;removeView(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</pre>
<div class="block">Unregister a view</div>
</li>
</ul>
<a name="getPercentDone()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPercentDone</h4>
<pre>public&nbsp;java.lang.String&nbsp;getPercentDone()</pre>
</li>
</ul>
<a name="getPanel()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPanel</h4>
<pre>public&nbsp;java.awt.Panel&nbsp;getPanel()</pre>
</li>
</ul>
<a name="keyDown(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>keyDown</h4>
<pre>public&nbsp;boolean&nbsp;keyDown(int&nbsp;key)</pre>
<div class="block">Method incorporates all reactions to keyboard input in original code, 
 The simple key listener calls this method to communicate input.</div>
</li>
</ul>
<a name="getSkillLevel()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSkillLevel</h4>
<pre>public&nbsp;int&nbsp;getSkillLevel()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../generation/Order.html#getSkillLevel()">Order</a></code></strong></div>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../generation/Order.html#getSkillLevel()">getSkillLevel</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="getBuilder()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBuilder</h4>
<pre>public&nbsp;<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;getBuilder()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../generation/Order.html#getBuilder()">Order</a></code></strong></div>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../generation/Order.html#getBuilder()">getBuilder</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="isPerfect()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPerfect</h4>
<pre>public&nbsp;boolean&nbsp;isPerfect()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../generation/Order.html#isPerfect()">Order</a></code></strong></div>
<div class="block">Describes if the ordered maze should be perfect, i.e. there are 
 no loops and no isolated areas, which also implies that 
 there are no rooms as rooms can imply loops</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../generation/Order.html#isPerfect()">isPerfect</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="deliver(generation.MazeConfiguration)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deliver</h4>
<pre>public&nbsp;void&nbsp;deliver(<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;mazeConfig)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../generation/Order.html#deliver(generation.MazeConfiguration)">Order</a></code></strong></div>
<div class="block">Delivers the produced maze. 
 This method is called by the factory to provide the 
 resulting maze as a MazeConfiguration.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../generation/Order.html#deliver(generation.MazeConfiguration)">deliver</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="updateProgress(int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>updateProgress</h4>
<pre>public&nbsp;void&nbsp;updateProgress(int&nbsp;percentage)</pre>
<div class="block">Allows external increase to percentage in generating mode.
 Internal value is only update if it exceeds the last value and is less or equal 100</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../generation/Order.html#updateProgress(int)">updateProgress</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>percentage</code> - gives the new percentage on a range [0,100]</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../falstad/MazeApplication.html" title="class in falstad"><span class="strong">Prev Class</span></a></li>
<li><a href="../falstad/MazeFileReader.html" title="class in falstad"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?falstad/MazeController.html" target="_top">Frames</a></li>
<li><a href="MazeController.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
