<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_79) on Sun Jun 12 16:57:11 EDT 2016 -->
<title>Seg</title>
<meta name="date" content="2016-06-12">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Seg";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Seg.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Order.Builder.html" title="enum in generation"><span class="strong">Prev Class</span></a></li>
<li><a href="../generation/Wall.html" title="class in generation"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/Seg.html" target="_top">Frames</a></li>
<li><a href="Seg.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class Seg" class="title">Class Seg</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>generation.Seg</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">Seg</span>
extends java.lang.Object</pre>
<div class="block">A segment is a continuous sequence of walls in the maze.
 
 This code is refactored code from Maze.java by Paul Falstad, www.falstad.com, Copyright (C) 1998, all rights reserved
 Paul Falstad granted permission to modify and use code for teaching purposes.
 Refactored by Peter Kemper</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../generation/Seg.html#Seg(int,%20int,%20int,%20int,%20int,%20int)">Seg</a></strong>(int&nbsp;psx,
   int&nbsp;psy,
   int&nbsp;pdx,
   int&nbsp;pdy,
   int&nbsp;distance,
   int&nbsp;cc)</code>
<div class="block">Constructor</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#equals(java.lang.Object)">equals</a></strong>(java.lang.Object&nbsp;other)</code>
<div class="block">Equals method that checks if the other object matches in dimensions and content.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.awt.Color</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getColor()">getColor</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getDir()">getDir</a></strong>()</code>
<div class="block">Computes specific integer values for the X,Y directions.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getDistance()">getDistance</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getEndPositionX()">getEndPositionX</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getEndPositionY()">getEndPositionY</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getExtensionX()">getExtensionX</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getExtensionY()">getExtensionY</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getStartPositionX()">getStartPositionX</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#getStartPositionY()">getStartPositionY</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#hashCode()">hashCode</a></strong>()</code>
<div class="block">We override the equals method, so it is good practice to do this
 for the hashCode method as well.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#isPartition()">isPartition</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#isSeen()">isSeen</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#setColor(java.awt.Color)">setColor</a></strong>(java.awt.Color&nbsp;color)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#setPartition(boolean)">setPartition</a></strong>(boolean&nbsp;partition)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#setSeen(boolean)">setSeen</a></strong>(boolean&nbsp;seen)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#storeSeg(org.w3c.dom.Document,%20org.w3c.dom.Element,%20int,%20int)">storeSeg</a></strong>(org.w3c.dom.Document&nbsp;doc,
        org.w3c.dom.Element&nbsp;mazeXML,
        int&nbsp;number,
        int&nbsp;i)</code>
<div class="block">stores fields into the given document with the help of the MazeFileWriter</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../generation/Seg.html#updatePartitionIfBorderCase(int,%20int)">updatePartitionIfBorderCase</a></strong>(int&nbsp;width,
                           int&nbsp;height)</code>
<div class="block">Sets partition bit to true for cases where the segment touches the border of the maze
 and has an extension of 0.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>getClass, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Seg(int, int, int, int, int, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Seg</h4>
<pre>public&nbsp;Seg(int&nbsp;psx,
   int&nbsp;psy,
   int&nbsp;pdx,
   int&nbsp;pdy,
   int&nbsp;distance,
   int&nbsp;cc)</pre>
<div class="block">Constructor</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>psx</code> - x coordinate of starting position of segment</dd><dd><code>psy</code> - y coordinate of starting position of segment</dd><dd><code>pdx</code> - direction and length of segment in x coordinate</dd><dd><code>pdy</code> - direction and length of segment in y coordinate</dd><dd><code>distance</code> - of starting position of this segment to exit position of maze</dd><dd><code>cc</code> - used to decide which color is assigned to segment, apparently it asks for a color change when a segment is split into two</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getDir()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDir</h4>
<pre>public&nbsp;int&nbsp;getDir()</pre>
<div class="block">Computes specific integer values for the X,Y directions.
 If x direction matters, it returns the inverse direction, either -1 or 1.
 If y direction matters, it returns the inverse direction, either -2 or 2.
 Possible return values limited to {-2,-1,1,2}.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="getDistance()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDistance</h4>
<pre>public&nbsp;int&nbsp;getDistance()</pre>
</li>
</ul>
<a name="storeSeg(org.w3c.dom.Document, org.w3c.dom.Element, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>storeSeg</h4>
<pre>public&nbsp;void&nbsp;storeSeg(org.w3c.dom.Document&nbsp;doc,
            org.w3c.dom.Element&nbsp;mazeXML,
            int&nbsp;number,
            int&nbsp;i)</pre>
<div class="block">stores fields into the given document with the help of the MazeFileWriter</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>doc</code> - </dd><dd><code>mazeXML</code> - </dd><dd><code>number</code> - </dd><dd><code>i</code> - </dd></dl>
</li>
</ul>
<a name="equals(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equals</h4>
<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;other)</pre>
<div class="block">Equals method that checks if the other object matches in dimensions and content.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>other</code> - provides fully functional cells object to compare its content</dd></dl>
</li>
</ul>
<a name="hashCode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hashCode</h4>
<pre>public&nbsp;int&nbsp;hashCode()</pre>
<div class="block">We override the equals method, so it is good practice to do this
 for the hashCode method as well.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</li>
</ul>
<a name="isPartition()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPartition</h4>
<pre>public&nbsp;boolean&nbsp;isPartition()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the partition</dd></dl>
</li>
</ul>
<a name="setPartition(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPartition</h4>
<pre>public&nbsp;boolean&nbsp;setPartition(boolean&nbsp;partition)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>partition</code> - the partition to set</dd></dl>
</li>
</ul>
<a name="updatePartitionIfBorderCase(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updatePartitionIfBorderCase</h4>
<pre>public&nbsp;void&nbsp;updatePartitionIfBorderCase(int&nbsp;width,
                               int&nbsp;height)</pre>
<div class="block">Sets partition bit to true for cases where the segment touches the border of the maze
 and has an extension of 0.
 Method is used in BSPBuilder.</div>
</li>
</ul>
<a name="isSeen()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSeen</h4>
<pre>public&nbsp;boolean&nbsp;isSeen()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the seen</dd></dl>
</li>
</ul>
<a name="setSeen(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSeen</h4>
<pre>public&nbsp;void&nbsp;setSeen(boolean&nbsp;seen)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>seen</code> - the seen to set</dd></dl>
</li>
</ul>
<a name="getColor()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getColor</h4>
<pre>public&nbsp;java.awt.Color&nbsp;getColor()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the col</dd></dl>
</li>
</ul>
<a name="setColor(java.awt.Color)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setColor</h4>
<pre>public&nbsp;void&nbsp;setColor(java.awt.Color&nbsp;color)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>col</code> - the color to set</dd></dl>
</li>
</ul>
<a name="getStartPositionX()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartPositionX</h4>
<pre>public&nbsp;int&nbsp;getStartPositionX()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the x</dd></dl>
</li>
</ul>
<a name="getStartPositionY()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartPositionY</h4>
<pre>public&nbsp;int&nbsp;getStartPositionY()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the y</dd></dl>
</li>
</ul>
<a name="getExtensionX()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExtensionX</h4>
<pre>public&nbsp;int&nbsp;getExtensionX()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the dx</dd></dl>
</li>
</ul>
<a name="getExtensionY()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExtensionY</h4>
<pre>public&nbsp;int&nbsp;getExtensionY()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the dy</dd></dl>
</li>
</ul>
<a name="getEndPositionY()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEndPositionY</h4>
<pre>public&nbsp;int&nbsp;getEndPositionY()</pre>
</li>
</ul>
<a name="getEndPositionX()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getEndPositionX</h4>
<pre>public&nbsp;int&nbsp;getEndPositionX()</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Seg.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Order.Builder.html" title="enum in generation"><span class="strong">Prev Class</span></a></li>
<li><a href="../generation/Wall.html" title="class in generation"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/Seg.html" target="_top">Frames</a></li>
<li><a href="Seg.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
